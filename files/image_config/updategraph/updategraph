#!/bin/bash

CONFIG_DB_INDEX=4
UPDATEGRAPH_CONF=/etc/sonic/updategraph.conf
CONFIG_DB_JSON=/etc/sonic/config_db.json
ACL_JSON=/etc/sonic/acl.json
MINGRAPH_FILE=/etc/sonic/minigraph.xml
GRAPH_URL_FILE=/tmp/dhcp_graph_url
ACL_URL_FILE=/tmp/dhcp_acl_url
INIT_CFG_JSON=/etc/sonic/init_cfg.json

reload_minigraph()
{
    echo "Reloading minigraph..."
    if [ ! -f ${INIT_CFG_JSON} ]; then
        echo "{}" > ${INIT_CFG_JSON}
    fi
    redis-cli -n $CONFIG_DB_INDEX FLUSHDB
    sonic-cfggen -H -m -j ${INIT_CFG_JSON} --write-to-db
    redis-cli -n $CONFIG_DB_INDEX SET "CONFIG_DB_INITIALIZED" "1"
    if [ -f ${ACL_JSON} ]; then
        acl-loader update full ${ACL_JSON}
    fi
    config qos reload
    DEVICE_TYPE=`sonic-cfggen -m -v DEVICE_METADATA.localhost.type`
    if [ "${DEVICE_TYPE}" != "MgmtToRRouter" ]; then
        pfcwd start_default
    fi

    if [[ -x /usr/bin/db_migrator.py ]]; then
        # Set latest version number
        /usr/bin/db_migrator.py -o set_version
    fi
}

if [ ! -f ${UPDATEGRAPH_CONF} ]; then
    echo "No updategraph.conf found, generating a default one."
    echo "enabled=false" >${UPDATEGRAPH_CONF}
fi

. ${UPDATEGRAPH_CONF}

if [ "$enabled" = "reload_only" ]; then
    reload_minigraph
    sed -i "/enabled=/d" ${UPDATEGRAPH_CONF}
    echo "enabled=false" >> ${UPDATEGRAPH_CONF}
    exit 0
fi

if [ "$enabled" != "true" ]; then
    echo "Disabled in updategraph.conf. Skipping graph update."
    exit 0
fi

# If ZTP package is available and enabled, use ZTP to download and load the graph.
if [ -e /usr/bin/ztp ] && [ "$(ztp status -c)" != "0:DISABLED" ]; then
    echo "ZTP is available and enabled. Skipping graph update."
    exit 0
fi

ACL_URL=$acl_src

if [ "$src" = "dhcp" ]; then
    # Enable dhcp client on management port eth0
    /sbin/dhclient -4 -v -pf /run/dhclient.eth0.pid -lf /var/lib/dhcp/dhclient.eth0.leases -I -df /var/lib/dhcp/dhclient6.eth0.leases eth0 &
    disown

    while [ ! -f ${GRAPH_URL_FILE} ]; do
       echo "Waiting for DHCP response..."
       sleep 1
    done

    if [ "`cat  ${GRAPH_URL_FILE}`" = "N/A" ]; then
        echo "No graph_url option in DHCP response. Skipping graph update and generating an empty configuration."
        PLATFORM=`sonic-cfggen -H -v DEVICE_METADATA.localhost.platform`
        if [ -f ${MINGRAPH_FILE} ]; then
            sonic-cfggen -H -m ${MINGRAPH_FILE} --preset empty > /tmp/device_meta.json
        else
            PRESET=(`head -n 1 /usr/share/sonic/device/$PLATFORM/default_sku`)
            sonic-cfggen -H -k ${PRESET[0]} --preset empty > /tmp/device_meta.json
        fi
        if [ -f ${INIT_CFG_JSON} ]; then
            sonic-cfggen -j /tmp/device_meta.json -j ${INIT_CFG_JSON} --print-data > ${CONFIG_DB_JSON}
        else
            cp -f /tmp/device_meta.json ${CONFIG_DB_JSON}
        fi
        redis-cli -n $CONFIG_DB_INDEX FLUSHDB
        sonic-cfggen -j ${CONFIG_DB_JSON} --write-to-db
        redis-cli -n $CONFIG_DB_INDEX SET "CONFIG_DB_INITIALIZED" "1"
        if [ "$dhcp_as_static" = "true" ]; then
            sed -i "/enabled=/d" ${UPDATEGRAPH_CONF}
            echo "enabled=false" >> ${UPDATEGRAPH_CONF}
        fi
        exit 0
    fi


    HOSTNAME=`hostname -s`
    GRAPH_URL=`sonic-cfggen -t ${GRAPH_URL_FILE} -a "{\"hostname\": \"$HOSTNAME\"}"`
    URL_REGEX='^(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]$'
    if [[ ! $GRAPH_URL =~ $URL_REGEX ]]; then
        echo "\"$GRAPH_URL\" is not a valid url. Skipping graph update."
        exit 0
    fi
    if [ "$dhcp_as_static" = "true" ]; then
        sed -i "/src=/d" ${UPDATEGRAPH_CONF}
        echo "src=\"$GRAPH_URL\"" >> ${UPDATEGRAPH_CONF}
    fi

    if [ -f ${ACL_URL_FILE} ]; then
        ACL_URL=`sonic-cfggen -t ${ACL_URL_FILE} -a "{\"hostname\": \"$HOSTNAME\"}"`
        if [[ ! $ACL_URL =~ $URL_REGEX ]]; then
            echo "\"$ACL_URL\" is not a valid url. Skipping acl update."
            ACL_URL=""
        fi
        if [ "$dhcp_as_static" = "true" ]; then
            sed -i "/acl_src=/d" ${UPDATEGRAPH_CONF}
            echo "acl_src=\"$ACL_URL\"" >> ${UPDATEGRAPH_CONF}
        fi
    fi
else
    GRAPH_URL=$src
fi

if [ -f ${MINGRAPH_FILE} ]; then
    echo "Renaming minigraph.xml to minigraph.old"
    mv ${MINGRAPH_FILE} /etc/sonic/minigraph.old
fi

echo "Getting minigraph from $GRAPH_URL"

while true; do
    curl -f $GRAPH_URL -o ${MINGRAPH_FILE} --connect-timeout 15 && break
    sleep 5
done

if [ -n "$ACL_URL" ]; then
    if [ -f ${ACL_JSON} ]; then
        echo "Renaming ${ACL_JSON} to acl.json.old"
        mv ${ACL_JSON} ${ACL_JSON}.old
    fi
    echo "Getting ACL config from $ACL_URL"

    while true; do
        curl -f $ACL_URL -o ${ACL_JSON} --connect-timeout 15 && break
        sleep 5
    done
else
    echo "Skip ACL config download."
fi

reload_minigraph
sonic-cfggen -d --print-data > ${CONFIG_DB_JSON}

# Mark as disabled after graph is successfully downloaded
sed -i "/enabled=/d" ${UPDATEGRAPH_CONF}
echo "enabled=false" >> ${UPDATEGRAPH_CONF}

