#!/usr/bin/env bash

STATE_DB_IDX="6"

function wait_until_vrf_ready
{
    secs=20
    VRF_NAME=$1

    echo "Waiting until VRF ${VRF_NAME} is ready..."

    # Wait for the VRF to come up
    # (i.e., VRF is present in STATE_DB and state is "ok")
    while ((secs-- > 0)); do
        RESULT=$(redis-cli -n ${STATE_DB_IDX} HGET "VRF_TABLE|${VRF_NAME}" "state" 2> /dev/null)
        if [ x"$RESULT" == x"ok" ]; then
            echo "VRF ${VRF_NAME} is ready!"
            break
        fi

        sleep 1
    done
}

function wait_until_iface_ready
{
    IFACE_NAME=$1
    IFACE_CIDR=$2
    secs=20

    echo "Waiting until interface ${IFACE_NAME} is ready..."

    # Wait for the interface to come up
    # (i.e., interface is present in STATE_DB and state is "ok")
    while ((secs-- > 0)); do
        RESULT=$(redis-cli -n ${STATE_DB_IDX} HGET "INTERFACE_TABLE|${IFACE_NAME}|${IFACE_CIDR}" "state" 2> /dev/null)
        if [ x"$RESULT" == x"ok" ]; then
            echo "Interface ${IFACE_NAME} is ready!"
            break
        fi

        sleep 1
    done

}

function wait_until_fdb_replayed
{
    secs=180

    echo "Waiting for  FDB to be ready after warm-reboot..."

    # Wait until  FDB is ready after warm-reboot
    # (i.e cehck if the system is going under warm-reboot and fdbsyncd restore status is "replayed" or "reconciled" )
    while ((secs-- > 0)); do
        RESULT=$(redis-cli -n ${STATE_DB_IDX} HGET "WARM_RESTART_TABLE|fdbsyncd" "state" 2> /dev/null)
        if [ x"$RESULT" == x"disabled" ] ; then
            echo "warm-reboot is disabled!"
            break
        fi
        if [ x"$RESULT" == x"replayed" ] || [ x"$RESULT" == x"reconciled" ]; then
            echo "FDB is ready!"
            break
        fi

        sleep 1
    done

}


{% if VRF %}
{% for (name) in VRF %}
wait_until_vrf_ready {{ name }}
{% endfor %}
{% endif %}
{% if INTERFACE %}
{% for (name, prefix) in INTERFACE|pfx_filter %}
{% if prefix | ipv4 %}
wait_until_iface_ready {{ name }} {{ prefix }}
{% endif %}
{% endfor %}
{% endif %}
{% if VLAN_INTERFACE %}
{% for (name, prefix) in VLAN_INTERFACE|pfx_filter %}
{% if prefix | ipv4 %}
wait_until_iface_ready {{ name }} {{ prefix }}
{% endif %}
{% endfor %}
{% endif %}
{% if PORTCHANNEL_INTERFACE %}
{% for (name, prefix) in PORTCHANNEL_INTERFACE|pfx_filter %}
{% if prefix | ipv4 %}
wait_until_iface_ready {{ name }} {{ prefix }}
{% endif %}
{% endfor %}
{% endif %}
wait_until_fdb_replayed
