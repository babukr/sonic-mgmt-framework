FROM docker-config-engine

ARG docker_container_name
ARG frr_user_uid
ARG frr_user_gid

RUN [ -f /etc/rsyslog.conf ] && sed -ri "s/%syslogtag%/$docker_container_name#%syslogtag%/;" /etc/rsyslog.conf

# Make apt-get non-interactive
ENV DEBIAN_FRONTEND=noninteractive

# Update apt's cache of available packages
# Install required packages
RUN apt-get update \
 && apt-get install -y libdbus-1-3 libdaemon0 libjansson4 libc-ares2 iproute2 libpython2.7 libjson-c2 logrotate

{% if docker_fpm_frr_debs.strip() -%}
# Copy locally-built Debian package dependencies
COPY \
{% for deb in docker_fpm_frr_debs.split(' ') -%}
debs/{{ deb }}{{' '}}
{%- endfor -%}
/debs/

RUN groupadd -g ${frr_user_gid} frr \
 && useradd -u ${frr_user_uid} -g ${frr_user_gid} -M -s /bin/false frr

# Install locally-built Debian packages and implicitly install their dependencies
RUN dpkg_apt() { [ -f $1 ] && { dpkg -i $1 || apt-get -y install -f; } || return 1; }{%- for deb in docker_fpm_frr_debs.split(' ') %}; \
dpkg_apt /debs/{{ deb }}
{%- endfor %}
{%- endif %}

# Clean up
RUN apt-get clean -y; \
    apt-get autoclean -y; \
    apt-get autoremove -y
RUN rm -rf /debs ~/.cache

COPY ["*.j2", "/usr/share/sonic/templates/"]
COPY ["start.sh", "config.sh", "/usr/bin/"]
COPY ["daemons", "daemons.conf", "vtysh.conf", "/etc/frr/"]

ENTRYPOINT /usr/bin/config.sh   \
        && /usr/bin/start.sh    \
        && /bin/bash
