###############################################################################
# Managed by sonic-config-engine
###############################################################################
#
# EXAMPLE.conf:
#   An example configuration file for configuring the Net-SNMP agent ('snmpd')
#   See the 'snmpd.conf(5)' man page for details
#
#  Some entries are deliberately commented out, and will need to be explicitly activated
#
###############################################################################

###############################################################################
#
#  ACCESS CONTROL
#

                                                 #  system + hrSystem groups only
view   systemonly  included   .1.3.6.1.2.1.1
view   systemonly  included   .1.3.6.1.2.1.25.1

                                                 #  Default IPv4 access to basic system info
{% if snmp_rocommunities %}
{% for community in snmp_rocommunities %}
rocommunity {{ community }}
rocommunity6 {{ community }}
{% endfor %}
{% else %}
{% if snmp_rocommunity  and snmp_rocommunity != 'NotConfigured' %}
rocommunity {{ snmp_rocommunity }}
rocommunity6 {{ snmp_rocommunity }}
{% endif %}
{% endif %}
                                                 #  Default IPv6 access to basic system info
{% if snmp_rocommunities6 %}
{% for community in snmp_rocommunities6 %}
rocommunity6 {{ community }}
{% endfor %}
{% else %}
{% if snmp_rocommunity6 and snmp_rocommunity6 != 'NotConfigured' %}
rocommunity6 {{ snmp_rocommunity6 }}
{% endif %}
{% endif %}

###############################################################################
#
#  SYSTEM INFORMATION
#

#  Note that setting these values here, results in the corresponding MIB objects being 'read-only'
#  See snmpd.conf(5) for more details
{% if snmp_location and snmp_location != 'NotConfigured' %}
sysLocation    {{ snmp_location }}
{% endif %}
{% if snmp_syscontact and snmp_syscontact != 'NotConfigured' %}
sysContact     {{ snmp_syscontact }}
{% endif %}
                                                 # Application + End-to-End layers
sysServices    72


#
#  Process Monitoring
#
# todo: should we enable snmp based monitoring of sswsyncd and other processes?

# At least one 'sendmail' process, but no more than 10
#proc  sendmail 10 1

#  Walk the UCD-SNMP-MIB::prTable to see the resulting output
#  Note that this table will be empty if there are no "proc" entries in the snmpd.conf file


#
#  Disk Monitoring
#
                               # 10MBs required on root disk, 5% free on /var, 10% free on all other disks
disk       /     10000
disk       /var  5%
includeAllDisks  10%

#  Walk the UCD-SNMP-MIB::dskTable to see the resulting output
#  Note that this table will be empty if there are no "disk" entries in the snmpd.conf file


#
#  System Load
#
                               # Unacceptable 1-, 5-, and 15-minute load averages
load   12 10 5

#  Walk the UCD-SNMP-MIB::laTable to see the resulting output
#  Note that this table *will* be populated, even without a "load" entry in the snmpd.conf file



###############################################################################
#
#  ACTIVE MONITORING
#
# Note: disabled snmp traps due to side effect of causing snmpd to listen on all ports (0.0.0.0)
#
#   send SNMPv1  traps
{%if v1_trap_dest and v1_trap_dest != 'NotConfigured' %}
trapsink {{ v1_trap_dest }}
{% else %}
#trapsink     localhost public
{% endif %}
#   send SNMPv2c traps
{%if v2_trap_dest and v2_trap_dest != 'NotConfigured' %}
trap2sink {{ v2_trap_dest }}
{% else %}
#trap2sink    localhost public
{% endif %}
#   send SNMPv2c INFORMs
{%if v3_trap_dest and v3_trap_dest != 'NotConfigured' %}
informsink {{ v3_trap_dest }}
{% else %}
#informsink   localhost public
{% endif %}

#  Note that you typically only want *one* of these three lines
#  Uncommenting two (or all three) will result in multiple copies of each notification.


#
#  Event MIB - automatically generate alerts
#
# Remember to activate the 'createUser' lines above
#iquerySecName   internalUser
#rouser          internalUser
# generate traps on UCD error conditions
#defaultMonitors          yes
#note, this release of snmpd does not support linkUpDownNotifications
# generate traps on linkUp/Down
#linkUpDownNotifications  yes


#
#  AgentX Sub-agents
#
                                           #  Run as an AgentX master agent
master          agentx
# internal socket to allow extension to other docker containers
# Currently the other container using this is docker-fpm-frr
# make sure this line matches bgp:/etc/snmp/frr.conf 
# please see testing procedure in the same file to verify this works
# to verify the SNMP docker side look for the following string in the log file:
# INFO snmp-subagent [ax_interface] INFO: Using agentx socket type tcp with path tcp:localhost:3161
# INFO supervisord snmp-subagent INFO:ax_interface:Using agentx socket type tcp with path tcp:localhost:3161
agentxsocket    tcp:localhost:3161

#
#  SysDescription pass-through
#
pass -p 10 .1.3.6.1.2.1.1.1 /usr/share/snmp/sysDescr_pass.py

# Begin Configuration derived from ConfigDB
###############################################################################
#
# System Group
#
{% if SNMP_SERVER is defined and SNMP_SERVER.SYSTEM is defined %}
{% if SNMP_SERVER.SYSTEM.sysName is defined %}
sysName {{ SNMP_SERVER.SYSTEM.sysName }}
{% endif %}
{% if SNMP_SERVER.SYSTEM.sysLocation is defined %}
sysLocation {{ SNMP_SERVER.SYSTEM.sysLocation }}
{% endif %}
{% if SNMP_SERVER.SYSTEM.sysContact is defined %}
sysContact {{ SNMP_SERVER.SYSTEM.sysContact }}
{% endif %}
{% endif %}


###############################################################################
#
# SNMP community strings
#

{% if SNMP_SERVER_COMMUNITY is defined %}
{% for community in SNMP_SERVER_COMMUNITY %}
{% if  SNMP_SERVER_COMMUNITY[community].group is defined and SNMP_SERVER_COMMUNITY[community].group != "None" and SNMP_SERVER_COMMUNITY[community].group != "" %}
com2sec    {{ community }}   default   {{ community }}
com2sec6   {{ community }}   default   {{ community }}
group      {{ SNMP_SERVER_COMMUNITY[community].group }}       v1        {{ community }}
group      {{ SNMP_SERVER_COMMUNITY[community].group }}       v2c       {{ community }}
{% else %}
rocommunity  {{ community }}
rocommunity6 {{ community }}
{% endif %}
{% endfor %}
{% endif %}

###############################################################################
#
# VACM Access
#                  name   context   model   level  prefix       read view    write view  notify view

{% if SNMP_SERVER_GROUP is defined %}
{% for group_def in SNMP_SERVER_GROUP %}
{% set group_name, secModel, inputSecLevel = group_def[0], group_def[2], group_def[3] %}
{% if SNMP_SERVER_GROUP[group_def].readView is defined and SNMP_SERVER_GROUP[group_def].readView != "None" %}
{% set readView = SNMP_SERVER_GROUP[group_def].readView %}
{% else %}
{% set readView = "\"\"" %}
{% endif %}
{% if SNMP_SERVER_GROUP[group_def].writeView is defined and SNMP_SERVER_GROUP[group_def].writeView != "None" %}
{% set writeView = SNMP_SERVER_GROUP[group_def].writeView %}
{% else %}
{% set writeView = "\"\"" %}
{% endif %}
{% if SNMP_SERVER_GROUP[group_def].notifyView is defined and SNMP_SERVER_GROUP[group_def].notifyView != "None" %}
{% set notifyView = SNMP_SERVER_GROUP[group_def].notifyView %}
{% else %}
{% set notifyView = "\"\"" %}
{% endif %}
{% if inputSecLevel == "no-auth-no-priv" %}
{% set secLevel = "noauth" %}
{% elif inputSecLevel == "auth-no-priv" %}
{% set secLevel = "auth" %}
{% elif inputSecLevel == "auth-priv" %}
{% set secLevel = "priv" %}
{% endif %}
access      {{ group_name }}      ""        {{ secModel }}  {{ secLevel }}   exact      {{ readView }}   {{ writeView }}   {{ notifyView }}
{% endfor %}
{% endif %}

###############################################################################
#
# Notify Table Entries
#
snmpNotifyTable  InformNotify  InformNotify  2  5  1
snmpNotifyTable  TrapNotify    TrapNotify    1  5  1

{% if SNMP_SERVER_TARGET is defined  and SNMP_SERVER_PARAMS is defined %}
#
# Target Addr Table Entries
#

{% if SNMP_SERVER is defined and SNMP_SERVER.SYSTEM['traps'] is defined and SNMP_SERVER.SYSTEM['traps'] == "enable" %}
{% for target_host in SNMP_SERVER_TARGET %}
{% if SNMP_SERVER_PARAMS[SNMP_SERVER_TARGET[target_host].targetParams] is defined %}
{% for tag in SNMP_SERVER_TARGET[target_host].tag %}
targetAddr  {{ target_host }}  {{ '1.3.6.1.2.1.100.1.2' if target_host | ipv6 else '1.3.6.1.6.1.1' }}  {{ target_host | snmp_host_str(SNMP_SERVER_TARGET[target_host].port) }}   {{ SNMP_SERVER_TARGET[target_host].timeout }}   {{ SNMP_SERVER_TARGET[target_host].retries }}  {{ tag }}  {{ SNMP_SERVER_TARGET[target_host].targetParams }}   3   1
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}

#
# Target Params Table Entries
#

{% for target_param in SNMP_SERVER_PARAMS %}
{% if SNMP_SERVER_PARAMS[target_param].securityNameV1 is defined %}
{% set sec_name, sec_level, sec_model = SNMP_SERVER_PARAMS[target_param].securityNameV1, "1", "0  1" %}
{% elif SNMP_SERVER_PARAMS[target_param].securityNameV2 is defined %}
{% set sec_name, sec_level, sec_model = SNMP_SERVER_PARAMS[target_param].securityNameV2, "1", "1  2" %}
{% elif SNMP_SERVER_PARAMS[target_param].user is defined %}
{% set sec_name, sec_model = SNMP_SERVER_PARAMS[target_param].user, "3  3" %}
{% if SNMP_SERVER_PARAMS[target_param].securityLevel == "no-auth-no-priv" %}
{% set sec_level = "1" %}
{% elif SNMP_SERVER_PARAMS[target_param].securityLevel == "auth-no-priv" %}
{% set sec_level = "2" %}
{% elif SNMP_SERVER_PARAMS[target_param].securityLevel == "auth-priv" %}
{% set sec_level = "3" %}
{% endif %}
{% endif %}
targetParams  {{ target_param }}  {{ sec_model }}  {{ sec_name }} {{ sec_level }}  3  1
{% endfor %}
{% endif %}

###############################################################################
#
# SNMPv3 USM Users
#  username    (MD5|SHA)  authpassphrase  [(DES|AES)  privpassphrase]
#

{% if  SNMP_SERVER_USER is defined %}
{% for usm_user in SNMP_SERVER_USER %}
{% if SNMP_SERVER_USER[usm_user].md5Key is defined %}
{% set authKey, authType = SNMP_SERVER_USER[usm_user].md5Key | snmp_passkey, "MD5" %}
{% endif %}
{% if SNMP_SERVER_USER[usm_user].shaKey is defined %}
{% set authKey, authType = SNMP_SERVER_USER[usm_user].shaKey | snmp_passkey, "SHA" %}
{% endif %}
{% if SNMP_SERVER_USER[usm_user].desKey is defined %}
{% set privKey, privType = SNMP_SERVER_USER[usm_user].desKey | snmp_passkey, "DES" %}
{% endif %}
{% if SNMP_SERVER_USER[usm_user].aesKey is defined %}
{% set privKey, privType = SNMP_SERVER_USER[usm_user].aesKey | snmp_passkey, "AES" %}
{% endif %}
{% if authKey is defined and authKey != "0x00000000000000000000000000000000" %}
{% set _authStr = " " + authType + " -l " + authKey  %}
{% else %}
{% set _authStr = "" %}
{% endif %}
{% if privKey is defined and privKey != "0x00000000000000000000000000000000" %}
{% set _privStr = " " + privType + " -l " + privKey %}
{% else %}
{% set _privStr = "" %}
{% endif %}
createUser {{ usm_user }}{{ _authStr }}{{ _privStr }}
{% endfor %}
{% endif %}

###############################################################################
#
# VACM View
#                               name      type                  oid  [mask]
#

{% if SNMP_SERVER_VIEW is defined %}
{% for viewName in SNMP_SERVER_VIEW %}
{% if SNMP_SERVER_VIEW[viewName].exclude is defined %}
{% for oid in SNMP_SERVER_VIEW[viewName].exclude %}
view        {{ viewName }}  	excluded  {{ oid }}
{% endfor %}
{% endif %}
{% if SNMP_SERVER_VIEW[viewName].include is defined %}
{% for oid in SNMP_SERVER_VIEW[viewName].include %}
view        {{ viewName }}      included  {{ oid }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}

###############################################################################
#
# SNMP agent Engine-Id
#

{% if SNMP_SERVER_ENGINE is defined and SNMP_SERVER_ENGINE['GLOBAL']['engine-id'] is defined %}
exactEngineID {{SNMP_SERVER_ENGINE['GLOBAL']['engine-id'] | snmp_engine_id(None)}}
{% elif DEVICE_METADATA is defined and DEVICE_METADATA['localhost']['mac'] is defined %}
exactEngineID  {{ DEVICE_METADATA['localhost']['mac'] | snmp_engine_id("default") }}
{% endif %}

###############################################################################
#
# SNMP agent address
#

{% if SNMP_AGENT_ADDRESS_CONFIG is defined %}
{% for addr_def in SNMP_AGENT_ADDRESS_CONFIG %}
{% set addr, port, intf = addr_def[0], addr_def[1], addr_def[2] %}
{% if port is defined and port != "" %}
{% set portStr = ":" + port %}
{% else %}
{% set portStr = ":161" %}
{% endif %}
{% if intf is defined and intf != "" %}
{% set intfStr = "%" + intf %}
{% else %}
{% set intfStr = "" %}
{% endif %}
agentAddress {{"udp6:[" + addr + "]" if addr | ipv6 else "udp:" + addr}}{{portStr}}{{intfStr}}
{% endfor %}
{% else %}
#  Listen for connections on all ip addresses, including eth0, ipv4 lo
#
agentAddress udp:161
agentAddress udp6:161
{% endif %}

# End Configuration derived from ConfigDB
